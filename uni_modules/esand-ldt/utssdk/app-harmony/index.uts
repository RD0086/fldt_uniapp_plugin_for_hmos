import { EsLDTInitConfig, EsLivingDetectionManager, KEY_NAME_ENUM, EsLivingDetectResult} from 'esldtsdk';
import router from '@ohos.router';

export {EsLivingDetectResult,KEY_NAME_ENUM,EsLDTInitConfig};

let mng:EsLivingDetectionManager=new EsLivingDetectionManager();

/**
 * 认证初始化（在程序开始之前就初始化
 * @param EsLDTInitConfig 人脸活体检测配置项 (参考 EsLDTInitConfig )
 * @return EsLivingDetectResult 初始化执行结果 (参考 EsLDTInitConfig)
 */

export async function UTS_Verify(initConfigString:string):Promise<EsLivingDetectResult>{
	let config:EsLDTInitConfig=new EsLDTInitConfig();
	config.initConfig(initConfigString);
	console.log(config.getConfig());
	return await mng.verifyInit(config);
}

/**
 * 人脸检测接口 跳转到人脸检测界面
 */
export async function UTS_StartLivingDetect(token:string):Promise<EsLivingDetectResult>{
	return await mng.startLivingDetect(token);
}


/**
 * 退出活体检测
 */
export function UTS_ExitLDT(){
	mng.exit();
	return;
}

/**
 * 退出鸿蒙原生层
 */
export function UTS_Exit(){
	router.back();
	return;
}

/**
 * 得到视频保存在本地的地址
 * 
 */
export function UTS_GetLDTVideo(token:string):string|null{
	return mng.getLDTVideo(token);
}

/**
 * 重置sdk的初始化设置
 */
export function UTS_RestartLdt():boolean{
	let res=false;
	mng = new EsLivingDetectionManager();
	res= true;
	return res;
}
